<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	
	<!-- 配置数据源 ， Druid 是一个JDBC组件库，包含数据库连接池以及SQL Parser等组件，目前DruidDataSource是比较优秀的数据库连接池。 -->
	<!-- 关于DruidDataSource，具体参考资料地址：https://github.com/alibaba/druid -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	
		<property name="url" value="${jdbc_url}"></property>
		<property name="username" value="${jdbc_username}"></property>
		<property name="password" value="${jdbc_password}"></property>
		
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		
		<!-- 用来验证数据库连接的查询语句，这条查询语句必须是至少返回一条数据的Select语句，
			每种数据库都有各自的数据库连接查询语句，在配置时需要特殊情况特殊分析。 -->
		<property name="validationQuery" value="${validationQuery}" />
		
		<!-- 如果设置为true时表示从池中取出连接前检验，如果检验失败，则从池中去除连接并尝试获取下一个。
			注意，当这个参数设置为true时，如果想要生效，查询验证语句参数必须要设置为非空字符串。 -->
		<property name="testOnBorrow" value="false" />
		
		<!-- 如果设置为true时表示是否在归还到池中前进行检验，设置为true后，如果想要生效，配置同上。 -->
		<property name="testOnReturn" value="false" />
		
		<!-- 指明连接是否被空闲连接回收器（如果有）进行检验，如果检测失败，连接将被从池中去除掉。
			设置为true后，如果想要生效，配置同上上。 -->
		<property name="testWhileIdle" value="true" />
		
		<!-- 配置间隔多久才进行一次检测，也就是在空闲连接回收器线程运行期间休眠的时间值，
			检测需要关闭的空闲连接，单位是毫秒，如果设置为非正数，表示不运行空闲连接回收器线程。-->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		
		<!-- 配置一个连接在池中最小生存的时间，也就是一个连接在池中空闲而不被空闲连接回收器回收的
			最小时间间隔，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 下面三个参数是用来配置数据库连接断开后自动进行连接的。 -->
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭Abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- filters 是用于通过别名配置扩展插件，比较常用的插件有监控、日志、防止SQL注入等。 -->
		<property name="filters" value="mergeStat" />
		
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 必须属性 JDBC Data Source -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 通用属性，用来指明 MyBatis的xml配置文件的路径 -->
		<property name="configLocation" value="classpath:mybatis.xml"></property>
		<!-- 自动扫描Mapper文件 -->
		<property name="mapperLocations" value="classpath:com/*/dao/*.xml"></property>
	</bean>
	
	<!-- Spring 与 MyBatis整合配置，扫描所有的Dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.*.dao"></property>
		<!-- 在单数据源的情况下，可以不用写一下配置 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- 配置事物管理组件 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

</beans>